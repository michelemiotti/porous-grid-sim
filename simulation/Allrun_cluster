#!/bin.bash
#$ -cwd                 # workingDirectory
#$ -j y
#$ -N PorousGridSim
#$ -S /bin/bash
#$ -q all.q                   # queueName
#$ -pe mpi 8           # cpuNumber
#$ -l h_rt=48:00:00
#----------------------------------------------------------

module use /software/spack/spack/share/spack/modules/linux-rocky8-sandybridge/
module load openfoam/2306-gcc-13.2.0-tnytlfv

#----------------------------------------------------------
# #!/bin/bash

NUM_PROCESSORS=8
GRID_FILENAME=wire_mesh.obj

# Run a command and check its exit code.
run_and_check() {
    $1 $2 > log.$1 2>&1

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

# Run a command in parallel and check its exit code.
run_and_check_parallel() {
    mpirun --hostfile machinefile.$JOB_ID -np $NUM_PROCESSORS $1 -parallel $2 > log.$1 2>&1

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

restore0Dir()
{
    if [ ! -d 0.orig ]
    then
        echo "No 0.orig/ to restore..." 1>&2
        return 0
    fi

    case "$1" in
    -proc | -processor | -processors)
        echo "Restore 0/ from 0.orig/  [processor directories]"

        \ls -d processor* | xargs -I {} \rm -rf ./{}/0
        \ls -d processor* | xargs -I {} \cp -r 0.orig ./{}/0 > /dev/null 2>&1

        # Remove '#include' directives from field dictionaries
        # for collated format
        if [ "$1" = "-processors" ]
        then
        (
            echo "Filter #include directives in processors/0:"
            \cd processors/0 2>/dev/null || exit 0
            for file in $(grep -l "#include" * 2>/dev/null)
            do
                foamDictionary "$file" > "$file.$$." && mv "$file.$$." "$file"
                echo "    $file"
            done | tr -d '\n'
            echo
        )
        fi
        ;;

    *)
        echo "Restore 0/ from 0.orig/"
        \rm -rf 0
        \cp -r 0.orig 0 2>/dev/null
        ;;
    esac
}

run_and_check surfaceFeatureExtract

run_and_check blockMesh

run_and_check decomposePar

run_and_check_parallel snappyHexMesh -overwrite

run_and_check restore0Dir -processor

run_and_check_parallel potentialFoam -writephi

run_and_check_parallel simpleFoam

run_and_check reconstructParMesh -constant

run_and_check reconstructPar -latestTime

python3 compute_pressure_drop.py
if ! [ $? = 0 ];
then
    echo "Computation of pressure drop coefficient failed!"
    exit 1
fi