#!/usr/bin/bash
# Run from this directory.
cd ${0%/*} || exit 1    

# Source tutorial run functions.
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set the number of processors.
NUM_PROCESSORS=$(python3 extract_num_processors.py 2>&1)
if ! [ $? = 0 ];
then
    echo "Extraction of number of processors failed!"
    exit 1
fi

# Run a command and check its exit code.
run_and_check() {
    runApplication $1 $2

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

# Run a command in parallel and check its exit code.
run_and_check_parallel() {
    runParallel -np $NUM_PROCESSORS $1 $2

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

run_and_check surfaceFeatureExtract

run_and_check blockMesh

run_and_check decomposePar

run_and_check_parallel snappyHexMesh -overwrite

run_and_check restore0Dir -processor

run_and_check_parallel potentialFoam -writephi

run_and_check_parallel $(getApplication)

run_and_check reconstructParMesh -constant

run_and_check reconstructPar -latestTime

paraFoam -touch
for (( i=0; i<$NUM_PROCESSORS; ++i )); 
do 
    cd processor$i
    paraFoam -touch
    cd ..
done
# Note: when visualizing, use u/U_inlet and Cp = 2p/U_inlet^2, when p is the OpenFOAM pressure (which is divided by the density).
# If Cp = 1, all energy is pressure energy, and the liquid is still. Before the grid, it is expected that Cp is almost 1.

python3 compute_pressure_drop.py
if ! [ $? = 0 ];
then
    echo "Computation of pressure drop coefficient failed!"
    exit 1
fi

# Sound notification.
# Might be useful if you want to be notified when the simulation is done.
# paplay /usr/share/sounds/freedesktop/stereo/complete.oga

#------------------------------------------------------------------------------