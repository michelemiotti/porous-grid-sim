#!/usr/bin/bash
# Run from this directory.
cd ${0%/*} || exit 1    

# Source tutorial run functions.
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set the number of processors.
NUM_PROCESSORS=4

# Choose the grid mesh.
GRID_FILENAME=wire_mesh.obj

# Run a command and check its exit code.
run_and_check() {
    runApplication $1 $2

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

# Run a command in parallel and check its exit code.
run_and_check_parallel() {
    runParallel -np $NUM_PROCESSORS $1 $2

    if ! [ $? = 0 ];
    then
        echo "$1 failed!"
        exit 1
    fi
}

cp ../exported-meshes/$GRID_FILENAME constant/triSurface/grid.obj
if ! [ $? = 0 ];
then
    echo "Copying the grid mesh failed!"
    exit 1
fi

run_and_check surfaceFeatureExtract

run_and_check blockMesh

run_and_check decomposePar

run_and_check_parallel snappyHexMesh -overwrite

run_and_check_parallel topoSet

run_and_check restore0Dir -processor

run_and_check_parallel $decompDict patchSummary

run_and_check_parallel potentialFoam -writephi

run_and_check_parallel $(getApplication)

run_and_check reconstructParMesh -constant

run_and_check reconstructPar -latestTime

paraFoam -touch
for (( i=0; i<$NUM_PROCESSORS; ++i )); 
do 
    cd processor$i
    paraFoam -touch
    cd ..
done

#------------------------------------------------------------------------------